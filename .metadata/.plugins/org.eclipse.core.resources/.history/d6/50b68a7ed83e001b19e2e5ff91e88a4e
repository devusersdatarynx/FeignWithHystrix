package com.datarynx.spring.data.user.api.controller;

import java.util.List;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.datarynx.spring.data.user.api.model.UserRequest;
import com.datarynx.spring.data.user.api.repository.UserRepository;

@RestController
@RequestMapping("/datademo")
public class UserController {
	
	private Logger logger = LoggerFactory.getLogger(UserController.class);
	@Autowired
	private UserRepository userRepository;

	@GetMapping("/user/{id}")
	public UserRequest user(@PathVariable("id") int id) {
		logger.info("calling userList() to get list of users based on ID");
		return userRepository.findById(id).get();
	}

	@GetMapping("/userList")
	public List<UserRequest> userList() {
		logger.info("calling userList() to get list of users");
		return userRepository.findAll();
	}

	@PostMapping("/user")
	public UserRequest addUser(@RequestBody UserRequest user) {
		logger.info("adding user");
		return userRepository.save(user);
	}

	@DeleteMapping("/user/{id}")
	public String  deleteUser(@PathVariable int id) {
		logger.info("deleting user - {}", id);
		userRepository.deleteById(id);
		return "User  deleted with userId : " + id;
	}

	
	  @PutMapping("/updateAddress/{id}/{newAddress}") String
	  updateAddress(@PathVariable int id, @PathVariable String newAddress) {
	  logger.info("updating user - {}", id);
	  UserRequest user =userRepository.findById(id);
	  return userRepository.save(entity) }
	 


}
